@import "../themes/theme";

@mixin themed() {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key) {
  @return map-get($theme-map, $key);
}

// breakpoint system

// extra extra small - 360px
@mixin xxs {
  @media (min-width: #{$xxs}) {
    @content;
  }
}

// extra small - 360px
@mixin xs {
  @media (min-width: #{$xs}) {
    @content;
  }
}

// small - 640px
@mixin sm {
  @media (min-width: #{$sm}) {
    @content;
  }
}

// medium - 768px
@mixin md {
  @media (min-width: #{$md}) {
    @content;
  }
}

// large - 1024px
@mixin lg {
  @media (min-width: #{$lg}) {
    @content;
  }
}

// extra large - 1280px
@mixin xl {
  @media (min-width: #{$xl}) {
    @content;
  }
}

// extra extra large - 1536px
@mixin xxl {
  @media (min-width: #{$xxl}) {
    @content;
  }
}

// Custom devices
@mixin rwd($screen) {
  @media (min-width: #{$screen}px) {
    @content;
  }
}

@mixin box-shadow($params: $shadow) {
  -webkit-box-shadow: $params;
  -moz-box-shadow: $params;
  box-shadow: $params;
}

@mixin radius($params: $small) {
  border-radius: $params;
}

@mixin line-clamp($num: 1) {
  display: -webkit-box;
  -webkit-line-clamp: #{$num};
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin all-center() {
  display: flex;
  align-items: center;
  justify-content: center;
}
@mixin x-center() {
  display: flex;
  align-items: center;
}

@mixin full-width-touch-devices() {
  @media (max-width: 948px) {
    max-width: 100% !important;
  }
}
